<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>OpenStreetMap &amp; OpenLayers - Multiple marker</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <link  rel="stylesheet"   href="http://cdn.leafletjs.com/leaflet-0.7/leaflet.css"/>
    <script src="http://cdn.leafletjs.com/leaflet-0.7/leaflet.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.15.1/css/ol.css" type="text/css">

    <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.15.1/build/ol.js"></script>
  
    
    <%- include('../partials/head'); %>
  </head>
  <body onload="initmap();" style="margin:0;">
    <header>
      <%- include('../partials/header'); %>
    </header>

    <main>
      <div id="map" style="width: 100vw; height: 100vh;"></div>
    </main>

    <footer>
      <%- include('../partials/footer'); %>
    </footer>
  
    <script>
//https://stackoverflow.com/questions/9765224/draw-line-between-two-points-using-openlayers
const Feature = ol.Feature;
const VectorSource = ol.source.Vector;
const VectorLayer = ol.layer.Vector;
const LineString = ol.geom.LineString;
//const Point = ol.geom.Point;
const Style = ol.style.Style;
const Stroke = ol.style.Stroke;
const fromLonLat = ol.proj.fromLonLat;
const Overlay = ol.Overlay;

// Two locations with long/lat values in degrees
const lonlat0 = [100.538142, 13.765230];
const lonlat1 = [100.529321, 13.793656];

/* BEGIN: Code for the line joining the 2 points */
/*
fromLonLat([96.17261925626285,16.829732218302638]),
          fromLonLat([96.1723724891368,16.829701410660043]),
          fromLonLat([96.17207207737705,16.829711680880752]),
          fromLonLat([96.17173947856135,16.829629525361565]),
          fromLonLat([96.17135323525125,16.82953709993576]),
*/
var points = [
  // fromLonLat([100.538142, 13.765230]), 
  // fromLonLat([100.529321, 13.793656])
  fromLonLat([96.17261925626285,16.829732218302638]),
  fromLonLat([96.1723724891368,16.829701410660043]),
  fromLonLat([96.17207207737705,16.829711680880752]),
  fromLonLat([96.17173947856135,16.829629525361565]),
  fromLonLat([96.17135323525125,16.82953709993576]),


  fromLonLat([96.17084897386792, 16.829393326261677]),
  fromLonLat([96.17074168451902,16.829321439571313]),
  fromLonLat([96.17087044020018,16.82731889553953]),
  fromLonLat([96.17090262729475,16.82715458450009]),

  fromLonLat([96.17090262754289,16.827082698367906]),
  fromLonLat([96.17092408522804,16.827072428986817]),
  fromLonLat([96.17099918752007,16.826897848602272]),
  fromLonLat([96.17106356098326,16.826671920903053]),

  fromLonLat([96.17110647654451,16.826517879250012]),
  fromLonLat([96.17114939195623,16.82640491538551]),
  fromLonLat([96.1713317813688,16.826404915692752]),
  fromLonLat([96.17150344196128,16.826476801984242]),


  fromLonLat([96.17183603464561,16.826569226860606]),
  fromLonLat([96.17196478019662,16.826558957178307]),
  fromLonLat([96.17228664452657,16.826661650747265]),
  fromLonLat([96.17268361095302,16.826754073926494]),


  fromLonLat([96.17338098543578,16.826856763262622]),
  fromLonLat([96.17367066516634,16.82694918551576]),
  fromLonLat([96.17394961594142,16.826990260229636]),
  fromLonLat([96.17422856781309,16.827082681893742]),


  fromLonLat([96.17392815846439,16.827010799403833]),
  fromLonLat([96.17406763386376,16.827021067175536]),
  fromLonLat([96.17421783865063,16.82706214311235]),
  fromLonLat([96.17419638047618,16.82703133500204]),

];
var line_feat1 = new Feature({
  geometry: new LineString(points),
  name: "My_Simple_LineString"
});
var line_vsrc = new VectorSource({
  features: [line_feat1],
  wrapX: false
});
var lineStyle = new Style({
  stroke: new Stroke({
    color: "red",
    width: 5,
    //lineDash: [4, 4, 4],
    lineCap: "butt"
    /* https://openlayers.org/en/latest/apidoc/module-ol_style_Stroke.html */
  })
});
var veclay_line = new VectorLayer({
  source: line_vsrc,
  style: lineStyle
});
// `veclay_line` is the outcome of this complicate code
/* END: Code for the line joining the 2 points */

// Create map
// Note: `veclay_line`, containing the LineString is used within `layers`
var map = new ol.Map({
  target: "map",
  layers: [
    new ol.layer.Tile({
      source: new ol.source.OSM()
    }),
    veclay_line
  ],
  view: new ol.View({
    center: ol.proj.fromLonLat([96.17207207737705,16.829711680880752]),
    zoom: 17
  })
});
    </script>


  </body>
</html>